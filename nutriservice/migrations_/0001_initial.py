# Generated by Django 3.0.5 on 2020-05-25 19:19

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('gender', models.CharField(choices=[('m', 'Masculino'), ('f', 'Feminino'), ('o', 'Outro')], default='f', max_length=1, verbose_name='Sexo')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Idade (anos)')),
                ('height', models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(300)], verbose_name='Altura (cm)')),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Peso (kg)')),
                ('body_fat', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='Gordura corporal (%)')),
                ('pal', models.DecimalField(choices=[(Decimal('1.20'), 'Sedentário'), (Decimal('1.50'), 'Leve'), (Decimal('1.75'), 'Ativo'), (Decimal('2.20'), 'Muito ativo')], decimal_places=2, default=Decimal('1.50'), max_digits=3, verbose_name='Atividade física atual')),
                ('nutritionist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nutritionist', to=settings.AUTH_USER_MODEL, verbose_name='Nutricionista')),
            ],
            options={
                'ordering': ['name', 'age'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data')),
                ('time', models.TimeField(verbose_name='Hora')),
                ('duration', models.IntegerField(verbose_name='Duração (minutos)')),
                ('summary', models.CharField(max_length=200, verbose_name='Resumo')),
                ('event', models.CharField(max_length=200, verbose_name='ID do evento Google')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutriservice.Client', verbose_name='Cliente')),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Data de início da parceria')),
                ('calendar', models.CharField(max_length=200, verbose_name='ID do calendário Google')),
            ],
            options={
                'ordering': ['-date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Data')),
                ('goal_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Peso desejado (kg)')),
                ('goal_body_fat', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='Gordura corporal (%)')),
                ('new_pal', models.DecimalField(blank=True, choices=[(Decimal('1.20'), 'Sedentário'), (Decimal('1.50'), 'Leve'), (Decimal('1.75'), 'Ativo'), (Decimal('2.20'), 'Muito ativo')], decimal_places=2, default=Decimal('1.75'), max_digits=3, null=True, verbose_name='Atividade física atual')),
                ('goal_time', models.DecimalField(blank=True, decimal_places=1, default=3, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(12)], verbose_name='Duração da dieta (meses)')),
                ('pal_change', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(300)], verbose_name='Mudança no PAL (%)')),
                ('daily_energy', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(5000)], verbose_name='Energia diária (kcal/dia)')),
                ('proteins', models.IntegerField(blank=True, default=25, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de proteínas (%)')),
                ('carbs', models.IntegerField(blank=True, default=50, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de hidratos de carbono (%)')),
                ('fats', models.IntegerField(blank=True, default=25, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de lípidos (%)')),
                ('regular_milk', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de leite meio-gordo (doses)')),
                ('low_fat_milk', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de leite magro (doses)')),
                ('solid_yoghurt', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de iogurte sólido (doses)')),
                ('liquid_yoghurt', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de iogurte líquido (doses)')),
                ('whey', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de whey (doses)')),
                ('fruit', models.IntegerField(blank=True, default=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de fruta (doses)')),
                ('vegetables', models.IntegerField(blank=True, default=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Quantidade de vegetais (doses)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutriservice.Client', verbose_name='Cliente')),
                ('meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutriservice.Meeting', verbose_name='Consulta')),
            ],
            options={
                'ordering': ['-date', 'client__name', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Hora')),
                ('place', models.CharField(blank=True, max_length=200, verbose_name='Local')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nutriservice.Client')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nutriservice.Partner', verbose_name='Parceiro'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilizador'),
        ),
    ]
